{"version":3,"sources":["screens/Home.js","screens/About.js","screens/Create.js","screens/Jobs.js","screens/JobDetails.js","screens/NotFound.js","components/Navbar.js","App.js","index.js"],"names":["Home","style","display","justifyContent","height","Box","sx","width","src","href","About","Create","useState","title","setTitle","body","setBody","author","setAuthor","history","useHistory","className","onSubmit","e","preventDefault","blog","fetch","method","headers","JSON","stringify","then","push","type","required","value","onChange","target","_","require","queryString","columns","field","headerName","editable","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","default","content","margin","spacing","padding","Jobs","props","jobs","setJobs","setIsPending","setError","classes","location","useLocation","console","log","pathname","React","useEffect","getJobs","parameters","parse","search","city","url","isEmpty","abortCont","AbortController","setTimeout","signal","res","ok","Error","json","data","catch","err","name","message","Paper","rows","pageSize","JobDetails","id","useParams","item","setItem","findById","match","find","position","NotFound","to","Navbar","demos","Iframe","dangerouslySetInnerHTML","__html","iframe","App","exact","path","allow","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.3c33884d.chunk.js","sourcesContent":["import React from \"react\";\n// import Blog from \"../components/Blog\";\nimport Image from \"material-ui-image\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@mui/material/Box\";\n\nconst Home = () => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", height: \"400vh\" }}>\n      <Box\n        sx={{\n          width: 500,\n          height: 500\n        }}\n      >\n        {\n          <Image src=\"https://tb9-images.s3.amazonaws.com/online-job-searching-vector.jpg\" />\n        }\n        <a href=\"https://www.vecteezy.com/free-vector/web\">\n          Web Vectors by Vecteezy\n        </a>\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return <div>This is the about page</div>;\n};\n\nexport default About;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Create = () => {\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [author, setAuthor] = useState(\"mario\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const blog = { title, body, author };\n\n    fetch(\"http://localhost:8000/blogs/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(blog)\n    }).then(() => {\n      // history.go(-1);\n      history.push(\"/\");\n    });\n  };\n\n  return (\n    <div className=\"create\">\n      <h2>Add a New Blog</h2>\n      <form onSubmit={handleSubmit}>\n        <label>Blog title:</label>\n        <input\n          type=\"text\"\n          required\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label>Blog body:</label>\n        <textarea\n          required\n          value={body}\n          onChange={(e) => setBody(e.target.value)}\n        ></textarea>\n        <label>Blog author:</label>\n        <select value={author} onChange={(e) => setAuthor(e.target.value)}>\n          <option value=\"mario\">mario</option>\n          <option value=\"yoshi\">yoshi</option>\n        </select>\n        <button>Add Blog</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Create;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { DataGrid } from \"@mui/x-data-grid\";\n// Load the full build.\nvar _ = require(\"lodash\");\n\nimport Data from \"../data/db\";\n\nimport useFetch from \"../Api/useFetch\";\n\n// https://github.com/sindresorhus/query-string\nconst queryString = require(\"query-string\");\n\nconst columns = [\n  { field: \"id\", headerName: \"ID\", width: 50 },\n  {\n    field: \"title\",\n    headerName: \"Title\",\n    width: 300,\n    editable: true\n  },\n  {\n    field: \"location\",\n    headerName: \"location\",\n    width: 150,\n    editable: true\n  },\n  {\n    field: \"company\",\n    headerName: \"Company\",\n    width: 200,\n    editable: true\n  },\n  {\n    field: \"description\",\n    headerName: \"Description\",\n    width: 200,\n    editable: true\n  }\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default\n  },\n  content: {\n    margin: theme.spacing(2),\n    padding: theme.spacing(2)\n  }\n}));\n\nconst Jobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n\n  const [items, setItems] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n\n  const classes = useStyles();\n  const location = useLocation();\n\n  console.log(\"path\", location.pathname);\n\n  React.useEffect(() => {\n    //filterJobs();\n    getJobs();\n  }, []);\n\n  const filterJobs = () => {\n    const parameters = queryString.parse(location.search);\n    var location = \"\";\n    var title = \"\";\n\n    \"location\" in parameters\n      ? (city = parameters[\"location\"])\n      : console.log(\"no location key\");\n    \"title\" in parameters\n      ? (position = parameters[\"title\"])\n      : console.log(\"no title key\");\n\n    console.log(parameters);\n\n    const filteredJob = props.data.jobs.filter((item) => {\n      if (location.length > 0 && title.length > 0) {\n        console.log(city, position);\n        return item.location === location && item.title === title;\n      } else if (location.length > 0) {\n        return item.location.match(location);\n      } else if (title.length > 0) {\n        return item.position.match(title);\n      } else {\n        return true;\n      }\n    });\n\n    setJobs(filteredJob);\n    console.log(filteredJob);\n  };\n\n  const getJobs = () => {\n    const parameters = queryString.parse(location.search);\n    var city = \"\";\n    var title = \"\";\n\n    \"location\" in parameters\n      ? (city = parameters[\"location\"])\n      : console.log(\"no location key\");\n    \"title\" in parameters\n      ? (title = parameters[\"title\"])\n      : console.log(\"no title key\");\n\n    console.log(parameters);\n    var url = \"https://server.bots-inc.com/apis/getJobs\";\n\n    if (!_.isEmpty(parameters)) {\n      url = `https://server.bots-inc.com/apis/getJobs?title=${title}&location=${city}`;\n      // https://server.bots-inc.com/apis/getJobs?title=Cyber%20Security&location=San%20Francisco\n    }\n\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      console.log(\"getJobs at url\", url);\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) {\n            // error coming back from server\n            console.log(\"Error fetching\");\n            throw Error(\"could not fetch the data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          console.log(\"result data\", data);\n          setIsPending(false);\n          setJobs(data);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted\");\n          } else {\n            // auto catches network / connection error\n            setIsPending(false);\n            setError(err.message);\n          }\n        });\n    }, 1000);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.content}>\n        <div style={{ height: 650, width: \"100%\" }}>\n          <DataGrid rows={jobs} columns={columns} pageSize={10} />\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Jobs;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory, useParams } from \"react-router-dom\";\n\n// Load the full build.\nvar _ = require(\"lodash\");\n\nconst JobDetails = (props) => {\n  const { id } = useParams();\n\n  const [item, setItem] = useState({});\n\n  React.useEffect(() => {\n    findById();\n  }, []);\n\n  const findById = () => {\n    console.log(\"props.data.jobs\", props.data.jobs);\n    const match = props.data.jobs.find((item) => item.id == id);\n    console.log(\"match\", match);\n    setItem(match);\n  };\n\n  return (\n    <div>\n      {\" \"}\n      {_.isEmpty(item) ? (\n        <h2>Job detail for {id} doesn't exist </h2>\n      ) : (\n        <article>\n          <h2>{item.title}</h2>\n          <h3>\n            {item.position} in {item.city}\n          </h3>\n        </article>\n      )}\n    </div>\n  );\n};\n\nexport default JobDetails;\n","import { Link } from \"react-router-dom\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      <h2>Sorry</h2>\n      <p>That page cannot be found</p>\n      <Link to=\"/\">Back to the homepage...</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <h1>Thrivex - Job Search</h1>\n      <div className=\"links\">\n        <Link to=\"/\">Home</Link>\n        {/* <Link to=\"/Create\">Create</Link> */}\n        <Link to=\"/jobs\">Jobs</Link>\n        <Link to=\"/about\">About</Link>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import \"./styles.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./screens/Home\";\nimport About from \"./screens/About\";\nimport Contact from \"./screens/Contact\";\nimport Create from \"./screens/Create\";\nimport Jobs from \"./screens/Jobs\";\nimport JobDetails from \"./screens/JobDetails\";\nimport NotFound from \"./screens/NotFound\";\nimport Navbar from \"./components/Navbar\";\n\nimport data from \"./data/db\";\n\nconst demos = {\n  soundcloud:\n    '<iframe width=\"100%\" height=\"166\" scrolling=\"no\" frameborder=\"no\" allow=\"autoplay\" src=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/379775672&color=%23ff5500&auto_play=true&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"></iframe>',\n  botinc:\n    '<iframe id=\"x\" src=\"https://server.bots-inc.com/index.html?cx=00270dd\" frameborder=\"0\" allowfullscreen style=\"border: none; display: block; height: 750px; width: 360px; position: fixed; bottom:0; right:0; visibility: visible;z-index: 2147483647; max-height: 100vh; max-width: 100vw; transition: none 0s ease 0s; background: none transparent;opacity: 1; pointer-events: auto; touch-action: auto;\"></iframe><script> window.onmessage = (e) => {if (e.data.hasOwnProperty(\"s\")) {i = document.getElementById(\"x\"); if (e.data.h) i.style.height = e.data.h;if (e.data.c) localStorage.setItem(\"c\",e.data.c); if (e.data.p) window.location.replace(e.data.p); if (e.data.m) i.contentWindow.postMessage(window.innerWidth+localStorage.getItem(\"c\"), e.data.s); if (e.data.u) window.open(e.data.u, \"_blank\"); } }; </script>',\n\n  plotly:\n    '<iframe src=\"https://codesandbox.io/embed/q7jmjyplvq?fontsize=14\" title=\"Plotly All Graph Types\" allow=\"geolocation; microphone; camera; midi; vr; accelerometer; gyroscope; payment; ambient-light-sensor; encrypted-media\" style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\" sandbox=\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\"></iframe>'\n};\n\n//codesandbox.io/s/react-iframe-demo-g3vst codePen =\nfunction Iframe(props) {\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: props.iframe ? props.iframe : \"\" }}\n    />\n  );\n}\n\nexport default function App() {\n  return (\n    <div>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n              <Route exact path=\"/jobs\">\n                <Jobs data={data} />\n              </Route>\n              <Route path=\"/jobs/:id\">\n                <JobDetails data={data} />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n      <Iframe iframe={demos[\"botinc\"]} allow=\"autoplay\" />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}